name: Generate new tag if needed

on:
  push:
    branches:
      - main

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      latest_tag: ${{ steps.latest_tag.outputs.latest_tag }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read latest tag
        id: latest_tag
        run: |
          tag=$(git describe --tags --abbrev=0 || echo 'none')
          echo "Latest tag: $tag"
          echo "latest_tag=$tag" >> $GITHUB_OUTPUT

      - name: Read version from package.json
        id: version
        run: |
          tag=v$(cat package.json | jq -r .version)
          echo "Current version: $tag"
          echo "version=$tag" >> $GITHUB_OUTPUT

      - name: Generate new tag if needed
        if: steps.version.outputs.version != steps.latest_tag.outputs.latest_tag
        run: |
          new_tag="${{ steps.version.outputs.version }}"
          echo "Generating new tag: $new_tag"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $new_tag
          git push origin --tags

  trigger-workflows:
    runs-on: ubuntu-latest
    needs: generate-tag
    if: needs.generate-tag.outputs.version != needs.generate-tag.outputs.latest_tag
    strategy:
      matrix:
        workflow: [marketplace.yml, compile_action.yml] # Array of workflows to trigger
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Ensures .git exists for gh CLI

      - name: Trigger ${{ matrix.workflow }}
        run: |
          git tag | tail
          gh workflow run ${{ matrix.workflow }} --ref $tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
